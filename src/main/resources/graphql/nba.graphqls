type Player {
    id: ID!
    name: String!
    age: Int
    height: String
    position: Position!
}

type Team {
    id: ID!
    name: String!
    city: String!
    arena: String
    founded: String
    owner: String
    coach: String!
    players: [Player]
}

type Mutation {
    createPlayer(teamId: ID, name: String, position: Position) : Int
    createTeam(name: String, city: String, coach: String): Int
    updatePlayer(playerId: ID, name: String, age: Int) : Int
    deletePlayer(playerId: ID) : Player
}

type Query {
    teams : [Team]
    players : [Player]
    playerByPlayerId(id: ID) : Player
    teamById(id: ID) : Team
    playersByTeamId(teamId: ID) : [Player]
}

enum Position {
    FORWARD
    CENTER
    GUARD
}



